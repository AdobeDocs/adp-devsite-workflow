---
name: Generate Metadata for all files

######################################################
# Start the job on a deployment to main or other branch
######################################################

on:
  workflow_call:
    inputs:
      FILE_NAME:
        required: false
        type: string
        default: "all_pages_content.txt"
    secrets:
      AZURE_OPENAI_ENDPOINT:
        required: true
      AZURE_OPENAI_API_KEY:
        required: true
        
  # workflow_dispatch:
  #   inputs:
  #     env:
  #       description: "Select environment to deploy to"
  #       type: choice
  #       required: true
  #       default: "stage"
  #       options:
  #         - stage
  #         - prod
  #         - stage & prod
  #     baseSha:
  #       description: "Use base SHA commit to deploy from (empty string defaults to last commit before HEAD)"
  #       type: string
  #       required: false
  #       default: ""
  #     deployAll:
  #       description: "Force deploy all files"
  #       type: boolean
  #       default: false

###############
# Set the Job #
###############
jobs:

  ai-metadata-update:
    name: AI Metadata Update on Deployment in Workflow
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Enable Corepack for Yarn v3
        run: |
          corepack enable
          corepack prepare yarn@3.2.1 --activate

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT

      - name: Cache yarn dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Checkout Scripts Repo
        uses: actions/checkout@v4
        with:
          repository: AdobeDocs/adp-devsite-scripts
          path: scripts
          ref: ai-metadata

      - name: Install dependencies and run script
        run: yarn install --mode=update-lockfile
        
      - name: Install scripts dependencies
        run: |
          cd scripts
          npm install

      - name: Validate Links and Navigation (Warning Only)
        continue-on-error: true
        run: |
          echo "ðŸ”— Validating links and navigation..."
          yarn buildNavigation || echo "Warning: Navigation build failed"
          yarn normalizeLinks || echo "Warning: Link normalization failed"
          yarn checkLinks || echo "Warning: Link validation found issues"
          echo "Link validation completed (warnings only)"
          
      - name: Fetch all pages content
        uses: actions/github-script@v7
        with:
          script: |
            const script = require('./scripts/fetch-pages-scripts.js');
            
            await script({
              core,
              githubToken: "${{ github.token }}",
              owner: "${{ github.event.repository.owner.login }}",
              repo: "${{ github.event.repository.name }}"
            });
          
      - name: Run AI metadata generation script
        uses: actions/github-script@v7
        with:
          script: |
            const script = require('./scripts/ai-scripts.js');
            
            await script({
              core,
              azureOpenAIEndpoint: "${{ secrets.AZURE_OPENAI_ENDPOINT }}",
              azureOpenAIAPIKey: "${{ secrets.AZURE_OPENAI_API_KEY }}",
              fileName: "${{ inputs.FILE_NAME || 'all_pages_content.txt' }}"
            });
          
      - name: Push Commit and Create PR
        uses: actions/github-script@v7
        with:
          script: |
            const script = require('./scripts/create-pr-scripts.js');
            
            await script({
              core,
              githubToken: "${{ github.token }}",
              owner: "${{ github.event.repository.owner.login }}",
              repo: "${{ github.event.repository.name }}"
            });
